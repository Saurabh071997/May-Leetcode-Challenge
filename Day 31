class Solution {
    public int minDistance(String word1, String word2) {
        int n = word1.length();
        int m  = word2.length();
        
        int[][] dp = new int[2][m+1];        
        for (int j = 0; j <= m; j++) {
            dp[0][j] = j;
        }
        
        for (int i = 1; i <= n; i++) {
            int cur = i & 1;
            int prev = cur ^ 1;

            dp[cur][0] = i;
            for (int j = 1; j <= m; j++) {
                if (word1.charAt(i-1) == word2.charAt(j-1)) {
                    dp[cur][j] = dp[prev][j-1];
                } else {
                    dp[cur][j] = Math.min(dp[prev][j] + 1, dp[cur][j-1] + 1);
                    dp[cur][j] = Math.min(dp[cur][j], dp[prev][j-1] + 1);
                }
            }
        }

        return dp[n & 1][m];
        
    }
}
