class Trie {

    /** Initialize your data structure here. */
    class TrieNode{
        TrieNode[] children;
        boolean end;
        public TrieNode() {
            this.children = new TrieNode[26];
            this.end = false;
            for(int i=0;i < 26; i++){
                this.children[i] = null;
            }
        }
    }
    
    TrieNode root;
    public Trie(){
        root = new TrieNode();
    }
    
    /** Inserts a word into the trie. */
    public void insert(String word) {
        TrieNode temp = root;
        for(char c : word.toCharArray()){
            int index = c - 'a';
            if(temp.children[index] == null){
                temp.children[index] = new TrieNode();
            }
            temp = temp.children[index];
        }
        temp.end = true;
        
    }
    
    /** Returns if the word is in the trie. */
    public boolean search(String word) {
        TrieNode temp = root;
        for(char c : word.toCharArray()){
            int index = c - 'a';
            if(temp.children[index] == null) return false;
            temp = temp.children[index];
        }
        return temp.end;
        
    }
    
    /** Returns if there is any word in the trie that starts with the given prefix. */
    public boolean startsWith(String prefix) {
        TrieNode temp = root;
        for(char c : prefix.toCharArray()){
            int index = c - 'a';
            if(temp.children[index] == null) return false;
            temp = temp.children[index];
        }
        return true;
        
    }
}
